Пространственные данные в R
========================================================
author: Тимофей Самсонов
date: 2019-02-15
autosize: true
font-family: 'Open Sans'

Пространственные данные
========================================================

Данные о географических объектах или явлениях, фиксирующие их местоположение и/или распределение в системе координат, привязанной к телу Земли или любого другого небесного тела

Модели пространственных данных:

- Растровые
- Векторные
- ...

Simple Features
========================================================

__Simple Features__ (официально _Simple Features Access_) --- это стандарт Open Geospatial Consortium (OGC) и Международной организации стандартизации (ISO) ISO 19125, который определяет общую модель хранения и доступа к векторным объектам (точка, линия, многоугольник, мульти точечные, мультилинии и т. д.), в географических информационных системах:

<http://www.opengeospatial.org/standards/sfa>

- Пространственный объект (_feature_) состоит из геометрии (_geometry_) и атрибутов геометрии (_attributes_).

- Примеры объектов: здание, река, административная граница, метеостанция.

Размерность пространственных объектов
========================================================

Все геометрии состоят из точек. Точки являются координатами в 2-, 3- или 4-мерном пространстве. Все точки в геометрии имеют одинаковую размерность. В дополнение к координатам $X$ и $Y$ имеются два дополнительных дополнительных параметра:

- координата $Z$, обозначающая высоту
- координата $M$, обозначающая некоторую меру, связанную с точкой, а не с признаком в целом (в этом случае это будет атрибут объекта). 

Измерение $M$ может быть использовано для представления времени или линейных координат (для маршрутов)

__Четыре__ варианта геометрии:

- двумерные точки $XY$
- трехмерные точки $XYZ$
- трехмерные точки $XYM$
- четырехмерные точки $XYZM$

В случае использования широт и долгот X соответствует долготе, Y соответствует широте.

Simple Features
========================================================

Всего стандарт __Simple Features__ включает в себя 17 типов геометрий. Из них наиболее употребительными являются следующие 7:

Тип |	Описание
----|---------
`POINT`	| нуль-мерная геометрия, содержащая одну точку
`LINESTRING` | последовательность точек, соединенных прямыми, несамопересекающимися отрезками; одномерная геометрия
`POLYGON`	| геометрия с положительной площадью (двумерная); последовательность точек, отрезки между которыми формируют замкнутое кольцо без самопересечений; первое кольцо является внешним, ноль и более остальных колец представляют дырки внетри полигона
`MULTIPOINT` | множество точек; геометрия типа `MULTIPOINT` называется _простой_ если ни одна пара точек в `MULTIPOINT` не совпадает
`MULTILINESTRING`	| множество линий
`MULTIPOLYGON`	| множество полигонов
`GEOMETRYCOLLECTION`	| множество геометрий произвольного типа за исключением `GEOMETRYCOLLECTION`

Оставшиеся виды геометрий _Simple Features_ включают: `CIRCULARSTRING, COMPOUNDCURVE, CURVEPOLYGON, MULTICURVE, MULTISURFACE, CURVE, SURFACE, POLYHEDRALSURFACE, TIN, TRIANGLE`

Simple Features
========================================================



Simple Features
========================================================

![plot of chunk unnamed-chunk-2](images/unnamed-chunk-2-1.png)


WELL-KNOWN TEXT
========================================================

__WELL-KNOWN TEXT (WKT)__ --- стандарт представления геометрии в виде множества списков координат:


```
MULTIPOINT (3.2 4, 3 4.6, 3.8 4.4, 3.5 3.8, 3.4 3.6, 3.9 4.5)
```

![plot of chunk unnamed-chunk-3](images/unnamed-chunk-3-1.png)


WELL-KNOWN TEXT
========================================================

__WELL-KNOWN TEXT (WKT)__ --- стандарт представления геометрии в виде множества списков координат:


```
LINESTRING (0 3, 0 4, 1 5, 2 5)
```

![plot of chunk unnamed-chunk-4](images/unnamed-chunk-4-1.png)

WELL-KNOWN TEXT
========================================================

__WELL-KNOWN TEXT (WKT)__ --- стандарт представления геометрии в виде множества списков координат:


```
MULTILINESTRING ((0 3, 0 4, 1 5, 2 5), (0.2 3, 0.2 4, 1 4.8, 2 4.8), (0 4.4, 0.6 5))
```

![plot of chunk unnamed-chunk-5](images/unnamed-chunk-5-1.png)

WELL-KNOWN TEXT
========================================================

__WELL-KNOWN TEXT (WKT)__ --- стандарт представления геометрии в виде множества списков координат:


```
POLYGON ((0 0, 1 0, 3 2, 2 4, 1 4, 0 0), (1 1, 1 2, 2 2, 1 1))
```

![plot of chunk unnamed-chunk-6](images/unnamed-chunk-6-1.png)

WELL-KNOWN TEXT
========================================================

__WELL-KNOWN TEXT (WKT)__ --- стандарт представления геометрии в виде множества списков координат:


```
MULTIPOLYGON (((0 0, 1 0, 3 2, 2 4, 1 4, 0 0), (1 1, 1 2, 2 2, 1 1)), ((3 0, 4 0, 4 1, 3 1, 3 0), (3.3 0.3, 3.3 0.8, 3.8 0.8, 3.8 0.3, 3.3 0.3)), ((3 3, 4 2, 4 3, 3 3)))
```

![plot of chunk unnamed-chunk-7](images/unnamed-chunk-7-1.png)

WELL-KNOWN TEXT
========================================================

__WELL-KNOWN TEXT (WKT)__ --- стандарт представления геометрии в виде множества списков координат:


```
GEOMETRYCOLLECTION (MULTIPOINT (3.2 4, 3 4.6, 3.8 4.4, 3.5 3.8, 3.4 3.6, 3.9 4.5), MULTIPOLYGON (((0 0, 1 0, 3 2, 2 4, 1 4, 0 0), (1 1, 1 2, 2 2, 1 1)), ((3 0, 4 0, 4 1, 3 1, 3 0), (3.3 0.3, 3.3 0.8, 3.8 0.8, 3.8 0.3, 3.3 0.3)), ((3 3, 4 2, 4 3, 3 3))), LINESTRING (0 3, 0 4, 1 5, 2 5))
```

![plot of chunk unnamed-chunk-8](images/unnamed-chunk-8-1.png)

WELL-KNOWN TEXT
========================================================

__WELL-KNOWN BINARY (WKB)__ --- бинарный формат хранения координат, который фактически используется в базах данных:


```
01 02 00 00 00 04 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 08 40 00 00 00 00 00 00 00 00 00 00 00 00 00 00 10 40 00 00 00 00 00 00 f0 3f 00 00 00 00 00 00 14 40 00 00 00 00 00 00 00 40 00 00 00 00 00 00 14 40
```

![plot of chunk unnamed-chunk-9](images/unnamed-chunk-9-1.png)

Slide With Plot
========================================================

![plot of chunk unnamed-chunk-10](images/unnamed-chunk-10-1.png)

Пространственная привязка
========================================================

Пространственная привязка включает несколько фундаментальных компонент:

1. __Эллипсоид вращения__ --- тело, по отношению к которому вычисляются геодезические координаты точек (широты и долготы)
1. __Исходные геодезические даты (датум)__ --- параметры положения эллипсоида в теле Земли
1. __Географическая система координат__ --- включает датум, положение начального меридиана и единицы измерения широт и долгот
1. __Система счета высот__ (геодезические, нормальные, ортометрические) - определяют содержательный смысл и порядок вычисления высот и глубин (координата Z)
1. __Модель квазигеоида или геоида__ --- определяет поверхность, относительно которой вычислаются высоты точек (используется в случае нормальных и ортометрических высот)
1. __Проекция__ --- математический спопоб перехода от географических координат на эллипсоиде к плоским прямоугольным координатам карты.
1. __Плоская прямоугольная система координат__ --- включает все вышеописанное, а также параметры проекции и единицы измерения координат.

Пространственная привязка
========================================================

Существует три основных способа задания (хранения) пространственной привязки:

- PROJ.4 String --- представление в виде строки
- WKT --- представление в виде иерархического списка
- EPSG --- представление в виде числового кода

<images src="spatref.png" width=400>

[spatialreference.org](spatialreference.org)

PROJ.4 String
========================================================

PROJ.4 String --- строковый формат представления информации о пространственной привязки, используемый в библиотеке PROJ.4 [http://proj4.org](http://proj4.org). Данная библиотека лежит в основе координатных систем пространственных данных, используется в R, Python, QGIS и прочих средах. Основные параметры строки:
```
+datum     Datum name (see `proj -ld`)
+ellps     Ellipsoid name (see `proj -le`)
+lat_0     Latitude of origin
+lat_1     Latitude of first standard parallel
+lat_2     Latitude of second standard parallel
+lat_ts    Latitude of true scale
+lon_0     Central meridian
+proj      Projection name (see `proj -l`)
+units     meters, US survey feet, etc.
+vunits    vertical units.
+x_0       False easting
+y_0       False northing
+zone      UTM zone
```

PROJ.4 String
========================================================

__Примеры записи координатных систем__

Географические координаты в _WGS84_ (без проекции):

```
+proj=longlat +datum=WGS84 +no_defs
```

Координаты в проекции _Web Mercator_ (проекция Google Maps, Яндекс.Карт и т.д.):

```
+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs
```

Координаты в _конической равнопромежуточной проекции_:

```
+proj=eqdc +lat_0=0 +lon_0=0 +lat_1=60 +lat_2=60 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs
```

Координаты в проекции _UTM, зона 37_:

```
+proj=utm +zone=37 +datum=WGS84 +units=m +no_defs
```

Well-Known Text (WKT)
========================================================

Координаты в _полярной стереографической проекции для карт России_:

```
PROJCS["WGS 84 / EPSG Russia Polar Stereographic",
    GEOGCS["WGS 84",
        DATUM["WGS_1984",
            SPHEROID["WGS 84",6378137,298.257223563,
                AUTHORITY["EPSG","7030"]],
            AUTHORITY["EPSG","6326"]],
        PRIMEM["Greenwich",0,
            AUTHORITY["EPSG","8901"]],
        UNIT["degree",0.0174532925199433,
            AUTHORITY["EPSG","9122"]],
        AUTHORITY["EPSG","4326"]],
    PROJECTION["Polar_Stereographic"],
    PARAMETER["latitude_of_origin",90],
    PARAMETER["central_meridian",105],
    PARAMETER["scale_factor",0.994],
    PARAMETER["false_easting",2000000],
    PARAMETER["false_northing",2000000],
    UNIT["metre",1,
        AUTHORITY["EPSG","9001"]],
    AXIS["X",EAST],
    AXIS["Y",NORTH],
    AUTHORITY["EPSG","5940"]]
```

EPSG
========================================================

__EPSG (European Petroleum Survey Group)__ --- европейская рабочая группа нефтегазовой области, которая ведет реестр систем координат с уникальными цифровыми кодами вида `EPSG:xxxxxx`. Коды EPSG оказались настолько удобны, что используются повсеместно для быстрой инициализации проекций со стандартными параметрами.

_WGS84_: `EPSG:4326`

_Web Mercator_: `EPSG:3857`

_UTM_: `EPSG:326..` , например для UTM 37N: `EPSG:32637`

<images src="epsg.png" width=400>

[www.epsg.org](http://www.epsg.org)


Преобразование пространственной привязки данных
========================================================

Преобразование пространственной привязки включает три различных операции:

1. __Трансформирование__ --- пересчет географических координат с одного датума на другой

1. __Проецирование__ --- переход от географических координат к плоским прямоугольным

1. __Обратное проецирование__ --- переход от плоских координат к прямоугольным.

Например, чтобы пересчитать координаты из _WGS84_ в _UTM_, достаточно выполнить проецирование координат

Однако, чтобы пересчитать координаты _UTM_ в проекцию _Гаусса-Крюгера_, необходимо:

1. Обратно проецировать координаты в географические _WGS84_
1. Трансформировать географические координаты c _WGS84_ в _ГСК-2011_
1. Проецировать координаты _ГСК-2011_ в проекцию _Гаусса-Крюгера_

_Несоответствие датумов часто является причиной того, что данные из разных наборов плохо совмещаются друг с другом_


Растровые данные
========================================================

__Растр__ представляет из себя матрицу значений. Разлиают растры _непрерывные_ и _категориальные (классифицированные)_. Также необходимо разделять _одноканальные_ и _многоканальные растры_.

<images src="rasters.gif" width=700>

Растровые данные
========================================================

Чтобы растр "сел" в нужное место на карте и корректно отображался, для него должна быть известна _проекция_, а также следующие параметры:

Параметр | Назначение
---------|---------
`NCOLS` | Количество столбцов
`NROWS` | Количество строк
`XLLCENTER` или `XLLCORNER` | Координата $X$ левого нижнего угла (или центра ячейки)
`YLLCENTER` или `YLLCORNER` | Координата $Y$ левого нижнего угла (или центра ячейки)
`CELLSIZE` | Размер ячейки
`NODATA_VALUE` | Значение, которое соответствует случаю "Нет данных"

`XLLCENTER` означает, что растр зарегистрирован по центрам ячеек
`XLLCORNER` означает, что растр зарегистрирован по левым нижним углам ячеек

Поддержка пространственных данных в R
========================================================

1. __Векторные данные__ — пакеты `sf` и `sp` (старый)
2. __Растровые данные__ - пакеты `raster` и `stars` (пока в разработке)

